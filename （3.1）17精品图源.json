[{"articleStyle":0,"customOrder":0,"enableJs":true,"enabled":true,"enabledCookieJar":true,"lastUpdateTime":0,"loadWithBaseUrl":true,"singleUrl":true,"sourceComment":"\u79c0\u4eba\u7f51\u7f51\u5740\u5bfc\u822a","sourceIcon":"https:\/\/images.weserv.nl\/?url=https:\/\/article.biliimg.com\/bfs\/article\/ded67638d944a7e0ef4452b721fd6434a22de16d.png","sourceName":"\u5168\u96c6\u79c0","sourceUrl":"https:\/\/b.2xiu.vip\/"},{"articleStyle":2,"concurrentRate":"1000","customOrder":0,"enableJs":true,"enabled":true,"enabledCookieJar":false,"header":"{\r\n\"User-Agent\": \"Dalvik\/2.1.0 (Linux; U; Android 10; BAH3-W09 Build\/HUAWEIBAH3-W09)\"\r\n}","lastUpdateTime":0,"loadWithBaseUrl":true,"ruleArticles":"class.list@class.node@class.sousuo||tag.ul.4@tag.li","ruleContent":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n    <title>{{@@.item_title@tag.h1@text}}<\/title>\r\n    <style>\r\n        .lazy-img {\r\n            width: 100%;\r\n            height: auto;\r\n            margin: 0 0;\r\n            opacity: 0;\r\n            transition: opacity 0.3s;\r\n            background: url('\/template\/images\/logo.png') no-repeat center;\r\n            background-size: contain;\r\n        }\r\n        #loads {\r\n            text-align: center;\r\n            padding: 20px;\r\n            color: #666;\r\n        }\r\n        .img-container {\r\n            position: relative;\r\n            margin: 0 0;\r\n            border: 1px solid #eee;\r\n        }\r\n        .url-debug {\r\n            font-size: 12px;\r\n            color: #999;\r\n            word-break: break-all;\r\n            padding: 5px;\r\n            background: #f5f5f5;\r\n        }\r\n        #loadMoreBtn {\r\n            display: block;\r\n            width: 80%;\r\n            margin: 20px auto;\r\n            padding: 12px;\r\n            background: #4CAF50;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 25px;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n        }\r\n        #loadMoreBtn:disabled {\r\n            background: #cccccc;\r\n            cursor: not-allowed;\r\n        }\r\n    <\/style>\r\n<\/head>\r\n<body>\r\n    <h3>{{@@.item_title@tag.h1@text}}<\/h3>\r\n    <h5>{{@class.jianjie@text}}<\/h5>\r\n    <div>{{@@tag.p@tag.img@html}}<\/div>\r\n    <div id=\"box\"><\/div>\r\n    <button id=\"loadMoreBtn\">\u52a0\u8f7d\u66f4\u591a<\/button>\r\n    <div id=\"loads\"><\/div>\r\n\r\n    <script>\r\n        const CONFIG = {\r\n            totalPage: {{@@class.page.0@tag.a.-2@textNodes##\\n}},\r\n            baseUrl: \"{{baseUrl.replace('.html','_')}}\",\r\n            loadingText: (currentPage, timeLeft) => `\u6b63\u5728\u52a0\u8f7d\u7b2c ${currentPage}\u5230${currentPage+1} \u9875 (${timeLeft}s)`,\r\n            errorText: \"\u52a0\u8f7d\u5931\u8d25\uff0c\u70b9\u51fb\u91cd\u8bd5\",\r\n            endText: \"\u5df2\u52a0\u8f7d\u5168\u90e8\u5185\u5bb9\",\r\n            maxRetries: 3,\r\n            countdownDuration: 120\r\n        };\r\n\r\n        let page = 1;\r\n        let isLoading = false;\r\n        let countdownTimer = null;\r\n        let allImages = [];\r\n        \r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    const img = entry.target;\r\n                    img.src = img.dataset.src;\r\n                    img.onload = () => {\r\n                        img.style.opacity = 1;\r\n                        img.style.background = 'none';\r\n                    };\r\n                    observer.unobserve(img);\r\n                }\r\n            });\r\n        });\r\n\r\n        const loadMoreBtn = document.getElementById('loadMoreBtn');\r\n        \r\n        function updateButtonState() {\r\n            loadMoreBtn.disabled = isLoading || page > CONFIG.totalPage;\r\n            if (page > CONFIG.totalPage) {\r\n                loadMoreBtn.style.display = 'none';\r\n                document.getElementById('loads').textContent = CONFIG.endText;\r\n            }\r\n        }\r\n\r\n        function startCountdown(duration, currentPage) {\r\n            let timeLeft = duration;\r\n            \r\n            countdownTimer = setInterval(() => {\r\n                document.getElementById('loads').textContent = \r\n                    CONFIG.loadingText(currentPage, timeLeft);\r\n                timeLeft--;\r\n                \r\n                if(timeLeft < 0) {\r\n                    clearInterval(countdownTimer);\n                    isLoading = false;\r\n                updateButtonState();\r\n                }\r\n            }, 1000);\r\n        }\r\n\r\n        async function fetchPage(p, retryCount = 0) {\r\n            try {\r\n                const response = await fetch(`${CONFIG.baseUrl}${p}.html`);\r\n                const text = await response.text();\r\n                const doc = new DOMParser().parseFromString(text, 'text\/html');\r\n                return Array.from(doc.querySelectorAll('p img'))\r\n                    .slice(0, 3)\r\n                    .map(img => img.src);\r\n            } catch (error) {\r\n                if(retryCount < CONFIG.maxRetries) {\r\n                    return fetchPage(p, retryCount + 1);\r\n                }\r\n                throw new Error(`\u7b2c${p}\u9875\u52a0\u8f7d\u5931\u8d25`);\r\n            }\r\n        }\r\n\r\n        async function loadImages() {\r\n            if (page > CONFIG.totalPage || isLoading) return;\r\n            \r\n            isLoading = true;\r\n            updateButtonState();\r\n            startCountdown(CONFIG.countdownDuration, page);\r\n\r\n            try {\r\n                \/\/ \u540c\u65f6\u52a0\u8f7d\u4e24\u9875\r\n                const [page1, page2] = await Promise.all([\r\n                    fetchPage(page),\r\n                    page+1 <= CONFIG.totalPage ? fetchPage(page+1) : Promise.resolve([])\r\n                ]);\r\n                \r\n                allImages.push(...page1, ...page2);\r\n                appendImages();\r\n                page += 2;\r\n\r\n                if (page > CONFIG.totalPage) {\r\n                    document.getElementById('loads').textContent = CONFIG.endText;\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                document.getElementById('loads').innerHTML = \r\n                    `<span style=\"color:red\">${CONFIG.errorText}<\/span>`;\r\n                loadMoreBtn.textContent = \"\u91cd\u8bd5\";\r\n                loadMoreBtn.onclick = () => {\r\n                    document.getElementById('loads').textContent = CONFIG.loadingText(page, CONFIG.countdownDuration);\r\n                    loadImages();\r\n                };\r\n            } finally {\r\n                clearInterval(countdownTimer);\r\n                isLoading = false;\r\n                updateButtonState();\n                loadImages();\r\n            }\r\n        }\r\n\r\n        function appendImages() {\r\n            const fragment = document.createDocumentFragment();\r\n            allImages.splice(0, 6).forEach(src => {\r\n                const container = document.createElement('div');\r\n                container.className = 'img-container';\r\n\r\n                const img = document.createElement('img');\r\n                img.className = 'lazy-img';\r\n                img.dataset.src = src;\r\n                img.src = '\/template\/images\/logo.png';\r\n                img.alt = '\u5199\u771f';\r\n\r\n                container.appendChild(img);\r\n                fragment.appendChild(container);\r\n                \r\n                observer.observe(img);\r\n            });\r\n            document.getElementById('box').appendChild(fragment);\r\n        }\r\n\r\n        \/\/ \u4e8b\u4ef6\u76d1\u542c\r\n        loadMoreBtn.addEventListener('click', loadImages);\r\n        window.addEventListener('scroll', () => {\r\n            if (window.innerHeight + window.scrollY >= document.documentElement.offsetHeight - 100) {\r\n                loadImages();\r\n            }\r\n        });\r\n        window.addEventListener('touchmove', () => {\r\n            if (window.innerHeight + window.scrollY >= document.documentElement.offsetHeight - 100) {\r\n                loadImages();\r\n            }\r\n        });\r\n        loadImages();\r\n        updateButtonState();\r\n    <\/script>\r\n<\/body>\r\n<\/html>\r\n","ruleDescription":"","ruleImage":"tag.a@tag.img@src","ruleLink":"tag.a.0@href","ruleNextPage":".current~a.0@href","rulePubDate":"{{@class.meta-post@textNodes}}_\u6d4f\u89c8:{{@class.cx_like@textNodes}}","ruleTitle":"{{@tag.a@title##\\[.*\\]## }}{{@class.meta-title@text##\\[.*\\]##}} {{@tag.span.0@text##\\n ##\\[.*\\]##}}{{@class.title@tag.span@text##\\[.*\\]##}}","singleUrl":false,"sortUrl":"\u6700\u65b0::\/new.html\n\u968f\u673a::\/XiuRen\/index{{ Math.ceil(Math.random()*100) }}.html\n\u641c\u7d22::\/plus\/search\/index.asp?keyword={{(source.getVariable()==''||source.getVariable()==null)?source.setVariable('\u7c89\u8272\u8584\u7eb1'):source.getVariable()}}&searchtype=titlekeywords\r\n\u4e00\u5468\u63a8\u8350::\/hot.html\n\u79c0\u4eba\u7f51:: \/XiuRen\/\r\nImiss\u7231\u871c\u793e::\/IMiss\/\r\n\u6a21\u8303\u5b66\u9662::\/MFStar\/\r\n\u55f2\u56e1\u56e1::\/FeiLin\/\r\n\u5c24\u871c\u835f::\/YouMi\/\r\n\u753b\u8bed\u754c::\/XiaoYu\/\r\n\u82b1\u6f3e::\/HuaYang\/\r\n\u661f\u989c\u793e::\/XingYan\/\r\n\u987d\u5473\u751f\u6d3b::\/Taste\/","sourceComment":"","sourceGroup":"\ud83d\udd1e","sourceIcon":"https:\/\/images.weserv.nl\/?url=https:\/\/article.biliimg.com\/bfs\/article\/ded67638d944a7e0ef4452b721fd6434a22de16d.png","sourceName":"\u79c0\u4eba\u96c6v22","sourceUrl":"http:\/\/25.xiuren005.top\/","style":"\/*\u6807\u9898\u76f8\u5173*\/\r\nh3{text-align:center}\r\nh6{margin-bottom:0}\r\nimg{width:100%}\nh5{margin-bottom:0;padding-left:5;}","variableComment":"\u641c\u7d22\u5173\u952e\u8bcd"}]